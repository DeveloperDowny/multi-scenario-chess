{"version":3,"sources":["helpers/index.js","components/square.js","components/board.js","pieces/piece.js","pieces/king.js","components/fallen-soldier-block.js","pieces/bishop.js","pieces/knight.js","pieces/pawn.js","pieces/queen.js","pieces/rook.js","assets/games/game1.js","dslogic/tree.js","features/counter/CounterSlice.js","app/store.js","utils/utils.js","components/game.js","components/HistoryThumb.jsx","components/History.jsx","components/Home.jsx","index.js"],"names":["diagonalDictionaryTLBR","require","diagonalDictionaryTRBL","rowDictionary","columnDictionary","module","exports","isSameRow","src","dest","isSameColumn","isSameDiagonal","isPathClean","srcToDestPath","squares","reduce","acc","curr","Square","props","className","shade","onClick","style","key","keyVal","Board","i","squareShade","this","board","squareRows","j","isEven","push","renderSquare","React","Component","num","Piece","player","iconUrl","backgroundImage","King","FallenSoldierBlock","square","piece","whiteFallenSoldiers","map","ws","index","blackFallenSoldiers","bs","Bishop","getSrcToDestPath","pathStart","pathEnd","incrementBy","path","Math","abs","Knight","Pawn","initialPositions","1","2","isDestEnemyOccupied","indexOf","Queen","Rook","initialiseChessBoard1","Array","fill","Node","chessBoardState","whoseMoveNext","winner","links","ss","movNumber","Tree","rootNode","lastNode","newNode","printTree","temp","undefined","lenght","forEach","counterSlice","createSlice","name","initialState","value","gameHistory","gameTree","sourceSelection","status","turn","currMovNum","reducers","increment","state","decrement","incrementByAmount","action","payload","addToHistory","move","dupdateTree","data","test","addNode","console","log","dupdateLastNodeAndHistory","node","slice","dupdateHistoryAndResetBoard","indexOfGameHistory","linksIndex","currNode","pop","actions","selectCount","counter","selectGameHistory","configureStore","reducer","counterReducer","middleware","getDefaultMiddleware","serializableCheck","takeSS2","domtoimage","toPng","document","querySelector","then","dataUrl","catch","error","updateTree","store","dispatch","Game","setShouldShow","backgroundColor","setState","Boolean","isMovePossible","isCheckForPlayer","oldState","getPlayer","opponent","playersKingPosition","getKingPosition","idx","storeState","getState","prev","length","id","handleClick","HistoryThumb","useState","mdata","setMdata","flexDirection","gap","element","onMouseEnter","e","onMouseLeave","alt","width","updateLastNodeAndHistory","History","mmgameHistory","useRef","useSelector","useEffect","current","scrollTop","ref","alignSelf","margin","fontSize","Home","shouldShow","display","alignItems","justifyContent","height","maxWidth","position","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.740c5e71.chunk.js","sourcesContent":["const diagonalDictionaryTLBR = require('../dictionaries/diagonalTopLeftBottomRight.json');\r\nconst diagonalDictionaryTRBL = require('../dictionaries/diagonalTopRightBottomLeft.json');\r\nconst rowDictionary = require('../dictionaries/row.json');\r\nconst columnDictionary = require('../dictionaries/column.json');\r\n\r\nconst isSameRow = (src, dest) => {\r\n  return !!(rowDictionary[src] && rowDictionary[src][dest]);\r\n}\r\n\r\nconst isSameColumn = (src, dest) => {\r\n  return !!(columnDictionary[src] && columnDictionary[src][dest]);\r\n}\r\n\r\nconst isSameDiagonal = (src, dest) => {\r\n  return !!((diagonalDictionaryTLBR[src] && diagonalDictionaryTLBR[src][dest]) ||\r\n    (diagonalDictionaryTRBL[src] && diagonalDictionaryTRBL[src][dest]))\r\n}\r\n\r\nconst isPathClean = (srcToDestPath, squares) => srcToDestPath.reduce((acc, curr) => !squares[curr] && acc, true)\r\n\r\n\r\nmodule.exports = {\r\n  isSameRow,\r\n  isSameColumn,\r\n  isSameDiagonal,\r\n  isPathClean\r\n}","import React from 'react';\r\n\r\nimport '../index.css';\r\n\r\nexport default function Square(props) {\r\n\r\n  return (\r\n    <button className={\"square \" + props.shade}\r\n      onClick={props.onClick}\r\n      style={props.style}\r\n      key={props.keyVal}\r\n    >\r\n\r\n    </button>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class Board extends React.Component {\r\n\r\n  renderSquare(i, squareShade) {\r\n    return <Square\r\n      key={i}\r\n      keyVal={i}\r\n      style={this.props.squares[i] ? this.props.squares[i].style : null}\r\n      shade={squareShade}\r\n      onClick={() => this.props.onClick(i)}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    const board = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      const squareRows = [];\r\n      for (let j = 0; j < 8; j++) {\r\n        const squareShade = (isEven(i) && isEven(j)) || (!isEven(i) && !isEven(j)) ? \"light-square\" : \"dark-square\";\r\n        squareRows.push(this.renderSquare((i * 8) + j, squareShade));\r\n      }\r\n      board.push(<div className=\"board-row\" key={i}>{squareRows}</div>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {board}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction isEven(num) {\r\n  return num % 2 === 0\r\n}","export default class Piece {\r\n  constructor(player, iconUrl) {\r\n    this.player = player;\r\n    this.style = { backgroundImage: \"url('\" + iconUrl + \"')\" };\r\n  }\r\n\r\n  getPlayer() {\r\n    return this.player\r\n  }\r\n}","import Piece from './piece.js';\r\nimport { isSameDiagonal, isSameRow } from '../helpers'\r\n\r\nexport default class King extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest) {\r\n    return ((src - 9 === dest && isSameDiagonal(src, dest)) ||\r\n      src - 8 === dest ||\r\n      (src - 7 === dest && isSameDiagonal(src, dest)) ||\r\n      (src + 1 === dest && isSameRow(src, dest)) ||\r\n      (src + 9 === dest && isSameDiagonal(src, dest)) ||\r\n      src + 8 === dest ||\r\n      (src + 7 === dest && isSameDiagonal(src, dest)) ||\r\n      (src - 1 === dest && isSameRow(src, dest)))\r\n  }\r\n\r\n  /**\r\n   * always returns empty array because of one step\r\n   * @return {[]}\r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    return [];\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport '../index.css';\r\nimport Square from './square.js';\r\n\r\nexport default class FallenSoldierBlock extends React.Component {\r\n\r\n  renderSquare(square, i, squareShade) {\r\n    return <Square\r\n      key={i}\r\n      keyVal={i}\r\n      piece={square}\r\n      style={square.style}\r\n    />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">{this.props.whiteFallenSoldiers.map((ws, index) =>\r\n          this.renderSquare(ws, index)\r\n        )}</div>\r\n        <div className=\"board-row\">{this.props.blackFallenSoldiers.map((bs, index) =>\r\n          this.renderSquare(bs, index)\r\n        )}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import Piece from './piece.js';\r\nimport { isSameDiagonal, isPathClean } from '../helpers'\r\n\r\nexport default class Bishop extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest, squares) {\r\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && isSameDiagonal(src, dest)\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if (src > dest) {\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else {\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if (Math.abs(src - dest) % 9 === 0) {\r\n      incrementBy = 9;\r\n      pathStart += 9;\r\n    }\r\n    else {\r\n      incrementBy = 7;\r\n      pathStart += 7;\r\n    }\r\n\r\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameRow } from '../helpers'\r\n\r\nexport default class Knight extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest) {\r\n    return ((src - 17 === dest && !isSameRow(src, dest)) ||\r\n      (src - 10 === dest && !isSameRow(src, dest)) ||\r\n      (src + 6 === dest && !isSameRow(src, dest)) ||\r\n      (src + 15 === dest && !isSameRow(src, dest)) ||\r\n      (src - 15 === dest && !isSameRow(src, dest)) ||\r\n      (src - 6 === dest && !isSameRow(src, dest)) ||\r\n      (src + 10 === dest && !isSameRow(src, dest)) ||\r\n      (src + 17 === dest && !isSameRow(src, dest)))\r\n  }\r\n\r\n  /**\r\n   * always returns empty array because of jumping\r\n   * @return {[]}\r\n   */\r\n  getSrcToDestPath() {\r\n    return [];\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameDiagonal } from '../helpers'\r\n\r\nexport default class Pawn extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"));\r\n    this.initialPositions = {\r\n      1: [48, 49, 50, 51, 52, 53, 54, 55],\r\n      2: [8, 9, 10, 11, 12, 13, 14, 15]\r\n    }\r\n  }\r\n\r\n  isMovePossible(src, dest, isDestEnemyOccupied) {\r\n\r\n    if (this.player === 1) {\r\n      if ((dest === src - 8 && !isDestEnemyOccupied) || (dest === src - 16 && !isDestEnemyOccupied && this.initialPositions[1].indexOf(src) !== -1)) {\r\n        return true;\r\n      }\r\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src - 9 || dest === src - 7)) {\r\n        return true;\r\n      }\r\n    }\r\n    else if (this.player === 2) {\r\n      if ((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && !isDestEnemyOccupied && this.initialPositions[2].indexOf(src) !== -1)) {\r\n        return true;\r\n      }\r\n      else if (isDestEnemyOccupied && isSameDiagonal(src, dest) && (dest === src + 9 || dest === src + 7)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * returns array of one if pawn moves two steps, else returns empty array  \r\n   * @param  {[type]} src  [description]\r\n   * @param  {[type]} dest [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    if (dest === src - 16) {\r\n      return [src - 8];\r\n    }\r\n    else if (dest === src + 16) {\r\n      return [src + 8];\r\n    }\r\n    return [];\r\n  }\r\n}\r\n","import Piece from './piece.js';\r\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\r\n\r\nexport default class Queen extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest, squares) {\r\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameDiagonal(src, dest) || isSameRow(src, dest) || isSameColumn(src, dest));\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if (src > dest) {\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else {\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if (Math.abs(src - dest) % 8 === 0) {\r\n      incrementBy = 8;\r\n      pathStart += 8;\r\n    }\r\n    else if (Math.abs(src - dest) % 9 === 0) {\r\n      incrementBy = 9;\r\n      pathStart += 9;\r\n    }\r\n    else if (Math.abs(src - dest) % 7 === 0) {\r\n      incrementBy = 7;\r\n      pathStart += 7;\r\n    }\r\n    else {\r\n      incrementBy = 1;\r\n      pathStart += 1;\r\n    }\r\n\r\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}","import Piece from './piece.js';\r\nimport { isSameRow, isSameColumn, isSameDiagonal, isPathClean } from '../helpers'\r\n\r\nexport default class Rook extends Piece {\r\n  constructor(player) {\r\n    super(player, (player === 1 ? \"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"));\r\n  }\r\n\r\n  isMovePossible(src, dest, squares) {\r\n    return isPathClean(this.getSrcToDestPath(src, dest), squares) && (isSameColumn(src, dest) || isSameRow(src, dest));\r\n  }\r\n\r\n  /**\r\n   * get path between src and dest (src and dest exclusive)\r\n   * @param  {num} src  \r\n   * @param  {num} dest \r\n   * @return {[array]}      \r\n   */\r\n  getSrcToDestPath(src, dest) {\r\n    let path = [], pathStart, pathEnd, incrementBy;\r\n    if (src > dest) {\r\n      pathStart = dest;\r\n      pathEnd = src;\r\n    }\r\n    else {\r\n      pathStart = src;\r\n      pathEnd = dest;\r\n    }\r\n    if (Math.abs(src - dest) % 8 === 0) {\r\n      incrementBy = 8;\r\n      pathStart += 8;\r\n    }\r\n    else {\r\n      incrementBy = 1;\r\n      pathStart += 1;\r\n    }\r\n\r\n    for (let i = pathStart; i < pathEnd; i += incrementBy) {\r\n      path.push(i);\r\n    }\r\n    return path;\r\n  }\r\n}\r\n","import Bishop from \"../../pieces/bishop\";\r\nimport King from \"../../pieces/king\";\r\nimport Knight from \"../../pieces/knight\";\r\nimport Pawn from \"../../pieces/pawn\";\r\nimport Queen from \"../../pieces/queen\";\r\nimport Rook from \"../../pieces/rook\";\r\n\r\nexport default function initialiseChessBoard1() {\r\n  const squares = Array(64).fill(null);\r\n\r\n  squares[0] = new Rook(2);\r\n  squares[3] = new Queen(2);\r\n  squares[4] = new King(2);\r\n  squares[7] = new Rook(2);\r\n  squares[8] = new Pawn(2);\r\n  squares[9] = new Bishop(2);\r\n  squares[14] = new Pawn(2);\r\n  squares[15] = new Pawn(2);\r\n  squares[17] = new Knight(2);\r\n  squares[20] = new Pawn(1);\r\n  squares[21] = new Bishop(2);\r\n  squares[26] = new Bishop(1);\r\n  squares[29] = new Queen(1);\r\n  squares[32] = new Pawn(2);\r\n  squares[34] = new Pawn(2);\r\n  squares[42] = new Pawn(1);\r\n  squares[50] = new Bishop(1);\r\n  squares[53] = new Pawn(1);\r\n  squares[54] = new Pawn(1);\r\n  squares[55] = new Pawn(1);\r\n  squares[56] = new Rook(1);\r\n  squares[57] = new Knight(1);\r\n  squares[60] = new Rook(1);\r\n  squares[62] = new King(1);\r\n\r\n  return squares;\r\n}\r\n","export class Node {\r\n  constructor() {\r\n    this.chessBoardState = [[]];\r\n    this.whoseMoveNext = [[]];\r\n    this.winner = \"none\"; //or \"white\" or \"black\"\r\n    this.links = [];\r\n    this.ss = \"\";\r\n    this.movNumber = 0;\r\n    //king capture condition or king cannot move anywhere condition\r\n    //who won button\r\n  }\r\n}\r\n\r\nexport class Tree {\r\n  constructor() {\r\n    this.rootNode = new Node();\r\n    this.lastNode = this.rootNode;\r\n  }\r\n\r\n  addNode(newNode) {\r\n    this.lastNode.links.push(newNode);\r\n    this.lastNode = newNode;\r\n    this.printTree(this.rootNode);\r\n  }\r\n\r\n  printTree(temp) {\r\n    if (\r\n      temp === undefined ||\r\n      temp.links === undefined ||\r\n      temp.links.lenght == 0\r\n    ) {\r\n      return;\r\n    } else {\r\n      // print(temp.chessBoardState)\r\n      temp.links.forEach((i) => {\r\n        this.printTree(i);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { createSlice, current } from \"@reduxjs/toolkit\";\r\nimport initialiseChessBoard1 from \"../../assets/games/game1\";\r\nimport { Tree, Node } from \"../../dslogic/tree\";\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    value: 0,\r\n    gameHistory: [],\r\n    gameTree: new Tree(),\r\n    squares: initialiseChessBoard1(),\r\n    player: 1,\r\n    sourceSelection: -1,\r\n    status: \"\",\r\n    turn: \"white\",\r\n    currMovNum: 1,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n    addToHistory: (state, move) => {\r\n      state.gameHistory.push(move);\r\n    },\r\n    dupdateTree: (state, data) => {\r\n      const { chessBoardState, whoseMoveNext, test } = data[\"payload\"];\r\n      // console.log(`testeci ${test} `);\r\n      // const whoseMoveNext = data[\"payload\"][\"whoseMoveNext\"];\r\n      // const chessBoardState = data[\"payload\"][\"chessBoardState\"];\r\n      // console.log(`${chessBoardState} ${whoseMoveNext} squares turn received`);\r\n      let newNode = new Node();\r\n      newNode.chessBoardState = chessBoardState;\r\n      newNode.whoseMoveNext = whoseMoveNext;\r\n      newNode.ss = test;\r\n      newNode.movNumber = state.currMovNum;\r\n      if (whoseMoveNext === \"white\") state.currMovNum += 1;\r\n      state.gameTree.addNode(newNode);\r\n      state.gameTree.printTree(state.gameTree.rootNode);\r\n\r\n      console.log(`pushing new node ${newNode}`);\r\n      state.gameHistory.push(newNode);\r\n    },\r\n    dupdateLastNodeAndHistory: (state, payload) => {\r\n      const { node, index } = payload[\"payload\"];\r\n      state.gameTree.lastNode = node;\r\n      state.gameHistory = state.gameHistory.slice(0, index + 1);\r\n      state.value = 1;\r\n    },\r\n    dupdateHistoryAndResetBoard: (state, payload) => {\r\n      const { indexOfGameHistory, linksIndex } = payload[\"payload\"];\r\n      console.log(\r\n        `ffdffd ${indexOfGameHistory} ${linksIndex} ${state.gameHistory[indexOfGameHistory]}`\r\n      );\r\n      let currNode = state.gameHistory[indexOfGameHistory].links[linksIndex];\r\n\r\n      state.gameHistory = state.gameHistory.slice(0, indexOfGameHistory + 1);\r\n\r\n      state.gameHistory.push(currNode);\r\n      while (\r\n        currNode != undefined &&\r\n        currNode.links != undefined &&\r\n        currNode.links.lenght != 0\r\n      ) {\r\n        state.gameHistory.push(currNode.links[0]);\r\n        currNode = currNode.links[0];\r\n      }\r\n      console.log(state.gameHistory.pop());\r\n      // console.log(state.gameHistory.pop());\r\n\r\n      state.value = 1;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  increment,\r\n  decrement,\r\n  incrementByAmount,\r\n  addToHistory,\r\n  dupdateTree,\r\n  dupdateLastNodeAndHistory,\r\n  dupdateHistoryAndResetBoard,\r\n} = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\nexport const selectGameHistory = (state) => state.counter.gameHistory;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/CounterSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n","import domtoimage from \"dom-to-image\";\r\nimport store from \"../app/store\";\r\nimport {\r\n  addToHistory,\r\n  increment,\r\n  selectGameHistory,\r\n  dupdateTree,\r\n  dupdateLastNodeAndHistory,\r\n  decrement,\r\n  dupdateHistoryAndResetBoard,\r\n} from \"../features/counter/CounterSlice\";\r\n\r\nexport function takeSS(gameHistory, setGameHistory) {\r\n  domtoimage\r\n    .toPng(document.querySelector(\"#game-board\"))\r\n    .then(function (dataUrl) {\r\n      //   var img = new Image();\r\n      //   img.src = dataUrl;\r\n      //   document.body.appendChild(img);\r\n      //   add to list. Rerender list in the images tab.\r\n\r\n      //   gameHistory.push(dataUrl);\r\n      setGameHistory([...gameHistory, dataUrl]);\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"oops, something went wrong!\", error);\r\n    });\r\n}\r\n\r\nexport async function takeSS2() {\r\n  let test = \"\";\r\n  await domtoimage\r\n    .toPng(document.querySelector(\"#game-board\"))\r\n    .then(function (dataUrl) {\r\n      //   var img = new Image();\r\n      //   img.src = dataUrl;\r\n      //   document.body.appendChild(img);\r\n      //   add to list. Rerender list in the images tab.\r\n\r\n      //   gameHistory.push(dataUrl);\r\n      // setGameHistory([...gameHistory, dataUrl]);\r\n      // console.log(store.getState().counter.gameHistory);\r\n      // store.dispatch(addToHistory(dataUrl));\r\n      // store.dispatch(increment());\r\n      test = dataUrl;\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"oops, something went wrong!\", error);\r\n    });\r\n\r\n  return test;\r\n}\r\n\r\nexport async function updateTree(chessBoardState, whoseMoveNext) {\r\n  let test = await takeSS2();\r\n  // console.log(`in awati ${test}`);\r\n  store.dispatch(dupdateTree({ chessBoardState, whoseMoveNext, test }));\r\n}\r\n\r\nexport function updateLastNodeAndHistory(node, index) {\r\n  store.dispatch(dupdateLastNodeAndHistory({ node, index }));\r\n}\r\n\r\nexport const doneReseting = () => {\r\n  store.dispatch(decrement());\r\n  // store.getState().counter.value = 0;\r\n};\r\n\r\nexport const updateHistoryAndResetBoard = (indexOfGameHistory, linksIndex) => {\r\n  store.dispatch(\r\n    dupdateHistoryAndResetBoard({ indexOfGameHistory, linksIndex })\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"../index.css\";\r\nimport Board from \"./board.js\";\r\nimport King from \"../pieces/king\";\r\nimport FallenSoldierBlock from \"./fallen-soldier-block.js\";\r\nimport initialiseChessBoard from \"../helpers/board-initialiser.js\";\r\nimport initialiseChessBoard1 from \"../assets/games/game1\";\r\nimport { takeSS, takeSS2, updateTree, doneReseting } from \"../utils/utils\";\r\n\r\nimport store from \"../app/store\";\r\nimport { addToHistory } from \"../features/counter/CounterSlice\";\r\n\r\nexport default class Game extends React.Component {\r\n  // test = () => {\r\n  //   store.dispatch(addMove(\"sfsd\")); // <--- this is the trick.\r\n  // };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // squares: initialiseChessBoard(),\r\n      squares: initialiseChessBoard1(),\r\n      whiteFallenSoldiers: [],\r\n      blackFallenSoldiers: [],\r\n      player: 1,\r\n      sourceSelection: -1,\r\n      status: \"\",\r\n      turn: \"white\",\r\n    };\r\n\r\n    // this.gameHistory = gameHistory;\r\n    // this.setGameHistory = setGameHistory;\r\n  }\r\n\r\n  handleClick(i) {\r\n    this.props.setShouldShow(false);\r\n    const squares = [...this.state.squares];\r\n    // console.log(squares);\r\n\r\n    if (this.state.sourceSelection === -1) {\r\n      if (!squares[i] || squares[i].player !== this.state.player) {\r\n        this.setState({\r\n          status:\r\n            \"Wrong selection. Choose player \" + this.state.player + \" pieces.\",\r\n        });\r\n        if (squares[i]) {\r\n          squares[i].style = { ...squares[i].style, backgroundColor: \"\" };\r\n        }\r\n      } else {\r\n        squares[i].style = {\r\n          ...squares[i].style,\r\n          backgroundColor: \"RGB(111,143,114)\",\r\n        }; // Emerald from http://omgchess.blogspot.com/2015/09/chess-board-color-schemes.html\r\n        this.setState({\r\n          status: \"Choose destination for the selected piece\",\r\n          sourceSelection: i,\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    squares[this.state.sourceSelection].style = {\r\n      ...squares[this.state.sourceSelection].style,\r\n      backgroundColor: \"\",\r\n    };\r\n\r\n    if (squares[i] && squares[i].player === this.state.player) {\r\n      this.setState({\r\n        status: \"Wrong selection. Choose valid source and destination again.\",\r\n        sourceSelection: -1,\r\n      });\r\n    } else {\r\n      const whiteFallenSoldiers = [];\r\n      const blackFallenSoldiers = [];\r\n      const isDestEnemyOccupied = Boolean(squares[i]);\r\n      const isMovePossible = squares[this.state.sourceSelection].isMovePossible(\r\n        this.state.sourceSelection,\r\n        i,\r\n        isDestEnemyOccupied\r\n      );\r\n\r\n      if (isMovePossible) {\r\n        if (squares[i] !== null) {\r\n          if (squares[i].player === 1) {\r\n            whiteFallenSoldiers.push(squares[i]);\r\n          } else {\r\n            blackFallenSoldiers.push(squares[i]);\r\n          }\r\n        }\r\n\r\n        squares[i] = squares[this.state.sourceSelection];\r\n        squares[this.state.sourceSelection] = null;\r\n\r\n        const isCheckMe = this.isCheckForPlayer(squares, this.state.player);\r\n\r\n        if (isCheckMe) {\r\n          this.setState((oldState) => ({\r\n            status:\r\n              \"Wrong selection. Choose valid source and destination again. Now you have a check!\",\r\n            sourceSelection: -1,\r\n          }));\r\n        } else {\r\n          let player = this.state.player === 1 ? 2 : 1;\r\n          let turn = this.state.turn === \"white\" ? \"black\" : \"white\";\r\n\r\n          this.setState((oldState) => ({\r\n            sourceSelection: -1,\r\n            squares,\r\n            whiteFallenSoldiers: [\r\n              ...oldState.whiteFallenSoldiers,\r\n              ...whiteFallenSoldiers,\r\n            ],\r\n            blackFallenSoldiers: [\r\n              ...oldState.blackFallenSoldiers,\r\n              ...blackFallenSoldiers,\r\n            ],\r\n            player,\r\n            status: \"\",\r\n            turn,\r\n          }));\r\n\r\n          // console.log(\"below\");\r\n          // console.log(this.gameHistory);\r\n          // takeSS(this.gameHistory, this.setGameHistory);\r\n          takeSS2();\r\n          // console.log(`${squares} ${turn} squares turn`);\r\n          updateTree(squares, turn);\r\n\r\n          //a7. things have moved here. add node here\r\n          //\r\n        }\r\n      } else {\r\n        this.setState({\r\n          status: \"Wrong selection. Choose valid source and destination again.\",\r\n          sourceSelection: -1,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getKingPosition(squares, player) {\r\n    return squares.reduce(\r\n      (acc, curr, i) =>\r\n        acc || //King may be only one, if we had found it, returned his position\r\n        (curr && //current squre mustn't be a null\r\n          curr.getPlayer() === player && //we are looking for aspecial king\r\n          curr instanceof King &&\r\n          i), // returned position if all conditions are completed\r\n      null\r\n    );\r\n  }\r\n\r\n  isCheckForPlayer(squares, player) {\r\n    const opponent = player === 1 ? 2 : 1;\r\n    const playersKingPosition = this.getKingPosition(squares, player);\r\n    const canPieceKillPlayersKing = (piece, i) =>\r\n      piece.isMovePossible(playersKingPosition, i, squares);\r\n    return squares.reduce(\r\n      (acc, curr, idx) =>\r\n        acc ||\r\n        (curr &&\r\n          curr.getPlayer() === opponent &&\r\n          canPieceKillPlayersKing(curr, idx) &&\r\n          true),\r\n      false\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // this.state.squares = this.props.position;\r\n    const storeState = store.getState();\r\n    const toChange = storeState.counter.value == 1;\r\n    if (toChange == true) {\r\n      console.log(storeState);\r\n      console.log(\"storeState\");\r\n      let prev =\r\n        store.getState().counter.gameHistory[\r\n          store.getState().counter.gameHistory.length - 1\r\n        ];\r\n      this.state.squares = prev.chessBoardState;\r\n      // this.state.turn = prev.whoseMoveNext === \"white\" ? \"black\" : \"white\";\r\n      this.state.turn = prev.whoseMoveNext;\r\n      this.state.player = prev.whoseMoveNext === \"white\" ? 1 : 2;\r\n      doneReseting();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"game\">\r\n          <div className=\"game-board\" id=\"game-board\">\r\n            <Board\r\n              // squares={this.state.squares}\r\n              squares={this.state.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <h3>Turn</h3>\r\n            <div\r\n              id=\"player-turn-box\"\r\n              style={{ backgroundColor: this.state.turn }}\r\n            ></div>\r\n            <div className=\"game-status\">{this.state.status}</div>\r\n\r\n            <div className=\"fallen-soldier-block\">\r\n              {\r\n                <FallenSoldierBlock\r\n                  whiteFallenSoldiers={this.state.whiteFallenSoldiers}\r\n                  blackFallenSoldiers={this.state.blackFallenSoldiers}\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className=\"icons-attribution\">\r\n          <div> <small> Chess Icons And Favicon (extracted) By en:User:Cburnett [<a href=\"http://www.gnu.org/copyleft/fdl.html\">GFDL</a>, <a href=\"http://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA-3.0</a>, <a href=\"http://opensource.org/licenses/bsd-license.php\">BSD</a> or <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL</a>], <a href=\"https://commons.wikimedia.org/wiki/Category:SVG_chess_pieces\">via Wikimedia Commons</a> </small></div>\r\n        </div> */}\r\n        {/* <ul>\r\n          <li><a href=\"https://github.com/TalhaAwan/react-chess\" target=\"_blank\">Source Code</a> </li>\r\n          <li><a href=\"https://www.techighness.com/post/develop-two-player-chess-game-with-react-js/\">Blog Post</a></li>\r\n        </ul> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  updateHistoryAndResetBoard,\r\n  updateLastNodeAndHistory,\r\n} from \"../utils/utils\";\r\n\r\n// import { Node } from \"../dslogic/tree\";\r\n\r\n// const HistoryThumb = ({ data, whoseMoveNext, arrOfThreadNodes, movNumber })\r\nconst HistoryThumb = ({ node, index, setShouldShow }) => {\r\n  console.log(`m fucj ${index} ${node}`);\r\n  console.log(node);\r\n  const [mdata, setMdata] = useState(node.ss);\r\n  // console.log(node);\r\n  // console.log(\"node\");\r\n  // if (node === undefined) return <div></div>;\r\n  // // this.chessBoardState = [[]];\r\n  // const whoseMoveNext = node.whoseMoveNext;\r\n  // // this.winner = \"none\"; //or \"white\" or \"black\"\r\n  // const arrOfThreadNodes = node.links;\r\n  // const data = node.ss;\r\n  // const movNumber = node.movNumber;\r\n  // setMdata(data);\r\n\r\n  // let mdata = data;\r\n\r\n  return (\r\n    <div className=\"flexCenter \" style={{ flexDirection: \"row\", gap: \"1rem\" }}>\r\n      {/* sfd */}\r\n      <div className=\"flexCenter\" style={{ flexDirection: \"column\" }}>\r\n        {/* <div className=\"pText\">{`${\r\n          node.whoseMoveNext == \"white\" ? \"...\" : \"\"\r\n        } ${node.movNumber})`}</div> */}\r\n        <div>{`Move: ${node.whoseMoveNext == \"white\" ? \"...\" : \"\"} ${\r\n          node.movNumber\r\n        })`}</div>\r\n        <div\r\n          className=\"flexCenter\"\r\n          style={{ flexDirection: \"row\", gap: \"0.5rem\" }}\r\n        >\r\n          <div>Thread:</div>\r\n          {node.links != undefined &&\r\n            node.links.map((element, i) => {\r\n              return (\r\n                <div\r\n                  className=\"thread_div\"\r\n                  key={i}\r\n                  onMouseEnter={(e) => {\r\n                    // mdata = element.ss;\r\n                    // console.log(element);\r\n                    setMdata(element.ss);\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    setMdata(node.ss);\r\n                  }}\r\n                  onClick={() => {\r\n                    // console.log(element);\r\n                    // console.log(i);\r\n                    // console.log(\"i\");\r\n                    updateHistoryAndResetBoard(index, i);\r\n                    setShouldShow(true);\r\n                  }}\r\n                >\r\n                  #{i + 1}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      <img\r\n        className=\"history_thumb\"\r\n        src={mdata}\r\n        alt=\"\"\r\n        width={200}\r\n        onClick={() => {\r\n          setShouldShow(true);\r\n          updateLastNodeAndHistory(node, index);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryThumb;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Node } from \"../dslogic/tree\";\r\nimport {\r\n  selectCount,\r\n  selectGameHistory,\r\n} from \"../features/counter/CounterSlice\";\r\nimport HistoryThumb from \"./HistoryThumb\";\r\n\r\n// const dispatch = useDispatch();\r\nconst History = ({ mmgameHistory, setShouldShow }) => {\r\n  const test = useRef(null);\r\n  let gameHistory = useSelector(selectGameHistory);\r\n  let count = useSelector(selectCount);\r\n  let m2 = [];\r\n\r\n  React.useEffect(() => {\r\n    console.log(gameHistory);\r\n    console.log(\"gameHistory is un\");\r\n    // gameHistory = gameHistory == undefined ? [] : gameHistory;\r\n\r\n    // m2 = gameHistory.map((node, i) => {\r\n    //   return <HistoryThumb key={i} node={node} />;\r\n    // });\r\n    // console.log(m2);\r\n\r\n    // setMgameHistoryM(m2);\r\n\r\n    // console.log(\"gameHistory abov\");\r\n    // console.log(test.current);\r\n\r\n    // console.log(`in use efect gamehis ${count}`);\r\n    if (test.current == null) return;\r\n\r\n    test.current.scrollTop = -10000000000000;\r\n    // console.log(`in use efect gamehis ${count}`);\r\n  }, [gameHistory]);\r\n\r\n  // let mgameHistory = gameHistory.map((mdata) => {\r\n  //   let data = mdata[\"payload\"];\r\n  //   // console.log(data);\r\n  //   // console.log(\"data\");\r\n\r\n  //   return <img key={data} src={data} alt=\"\" width={200} />;\r\n  // });\r\n\r\n  // let m2 = gameHistory.map(({ node, i }) => {\r\n  //   console.log(`received node ${node}`);\r\n  //   if (node === undefined) return;\r\n  //   return <HistoryThumb key={i} node={node[\"payload\"]} />;\r\n  // });\r\n\r\n  return (\r\n    <div className=\"history_section__parent\">\r\n      <div className=\"history_section\" id=\"history\" ref={test}>\r\n        {gameHistory != undefined &&\r\n          gameHistory.map((node, i) => {\r\n            console.log(node);\r\n            console.log(i);\r\n            console.log(\"in history.jsx\");\r\n            if (node == undefined) return;\r\n            return (\r\n              <HistoryThumb\r\n                key={i}\r\n                node={node}\r\n                index={i}\r\n                setShouldShow={setShouldShow}\r\n              />\r\n            );\r\n          })}\r\n        <div\r\n          className=\"h1Text\"\r\n          style={{\r\n            alignSelf: \"flex-end\",\r\n            margin: \"0.5rem 2rem\",\r\n            fontSize: \"2rem\",\r\n          }}\r\n        >\r\n          History\r\n        </div>\r\n        {/* {mgameHistoryM} */}\r\n        {/* {m2} */}\r\n        {/* <HistoryThumb node={newNode} /> */}\r\n        {/* {mgameHistory}\r\n         */}\r\n        {/*  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Game from \"./game\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport \"./Home.css\";\r\nimport History from \"./History\";\r\nimport { Tree } from \"../dslogic/tree\";\r\nimport { takeSS, updateTree } from \"../utils/utils\";\r\nimport initialiseChessBoard1 from \"../assets/games/game1\";\r\n\r\n// function takeSS2() {\r\n//   html2canvas(document.querySelector(\"#game-board\")).then((canvas) => {\r\n//     document.body.appendChild(canvas);\r\n//   });\r\n// }\r\n\r\n//   html2canvas(document.getElementById(\"#gameDiv\"), {\r\n//     onrendered: function (canvas) {\r\n//       let theCanvas = canvas;\r\n\r\n//       canvas.toBlob(function (blob) {\r\n//         saveAs(blob, \"Dashboard.png\");\r\n//       });\r\n//     },\r\n//   });\r\n\r\nconst Home = () => {\r\n  useEffect(() => {\r\n    updateTree(initialiseChessBoard1(), \"white\");\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  //   let gameHistory = [];\r\n\r\n  const [gameHistory, setGameHistory] = useState([]);\r\n  const [shouldShow, setShouldShow] = useState(false);\r\n\r\n  let mTree = new Tree();\r\n  let listOfMoves = [\"12\", \"20\", \"30\", \"40\", \"57\"];\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <div className=\"h1Text\" style={{ margin: \"2rem\" }}>\r\n        Multi-Scenario Chess\r\n      </div>\r\n\r\n      {shouldShow && (\r\n        <div className=\"pText\" style={{ fontSize: \"1rem\", margin: \".5rem\" }}>\r\n          *click on board to refresh*\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"gameDiv \"\r\n        id=\"gameDiv\"\r\n        style={{\r\n          maxWidth: \"376px\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Game\r\n          setShouldShow={setShouldShow}\r\n          position={initialiseChessBoard1()}\r\n        />\r\n        {/* // gameHistory={gameHistory} setGameHistory={setGameHistory} /> */}\r\n      </div>\r\n\r\n      {/* <div className=\"history_section\"> */}\r\n      {/* <div>Game History</div> */}\r\n      <History gameHistory={gameHistory} setShouldShow={setShouldShow} />\r\n      {/* </div> */}\r\n\r\n      <div className=\"temp flexCenter\">\r\n        {/* <button\r\n          className=\"mbutton\"\r\n          onClick={() => takeSS(gameHistory, setGameHistory)}\r\n        >\r\n          Temp Button\r\n        </button> */}\r\n        {/* <History gameHistory={gameHistory} /> */}\r\n        {/* {gameHistory.forEach((element) => {\r\n          console.log(gameHistory);\r\n          return <p>{element}</p>;\r\n        })}\r\n        fg */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport Game from \"./components/game.js\";\r\nimport Home from \"./components/Home\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\n\r\nReactDOM.render(\r\n  // <Game />,\r\n  <Provider store={store}>\r\n    <Home />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}